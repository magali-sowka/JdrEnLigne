@model PartieVM
@{
	@inject UserManager<JdrUser> UserManager
	JdrUser joueur = await UserManager.GetUserAsync(User);
	bool isMeneur = (Model.Meneur.Id == joueur.Id);
}


<div class="card m-0 p-0">
	<div class="card-body m-0 p-0 row">
		<div class="col-md-3 bg-gray">
			<dl class="row gy-1 m-2">
				<dt>
					@Html.DisplayNameFor(model => model.Format)
				</dt>
				<dd>
					@Html.DisplayFor(model => model.Format)
				</dd>
				<dt>
					@Html.DisplayNameFor(model => model.Systeme)
				</dt>
				<dd>
					@Html.DisplayFor(model => model.Systeme)
				</dd>
				<dt>
					@Html.DisplayNameFor(model => model.Vtt)
				</dt>
				<dd>
					@Html.DisplayFor(model => model.Vtt)
				</dd>
				<dt>
					Thèmes
				</dt>
				<dd>
					@{
						foreach (Genre genre in Model.Genres)
						{
							@:@genre.Libelle
						}
					}
				</dd>
				<dt>
					Nombre de joueurs
				</dt>
				<dd>
					@(Model.NbPlacesTot - Model.NbPlacesRest)
				</dd>
				@if (Model.Format == Discriminator.Oneshot)
				{
					<dt>
						@Html.DisplayNameFor(model => model.NbSeances)
					</dt>
					<dd>
						@Html.DisplayFor(model => model.NbSeances)
					</dd>
				}
				else
				{
					<dt>
						@Html.DisplayNameFor(model => model.Duree)
					</dt>
					<dd>
						@Html.DisplayFor(model => model.Duree)
					</dd>
					<dt>
						@Html.DisplayNameFor(model => model.Frequence)
					</dt>
					<dd>
						@Html.DisplayFor(model => model.Frequence)
					</dd>
				}
				<dt>
					@Html.DisplayNameFor(model => model.Statut)
				</dt>
				<dd>
					@Model.Statut.GetEnumDescription()
				</dd>
			</dl>
		</div>
		<div class="col-md-9">
			<dl class="row gy-2 m-2">
				<dt>
					@Html.DisplayNameFor(model => model.Description)
				</dt>
				<dd class="mt-3">
					@Html.Raw(Model.Description)
				</dd>
			</dl>
		</div>
	</div>
</div>


@if (isMeneur)
{
	<div class="mt-4">
		<a class="btn btn-outline-primary w-100" asp-area="Joueur" asp-page="/Parties/Edit" asp-route-id="@Model.PartieId">
			<i class="fa-solid fa-pencil"></i>
			Modifier
		</a>
	</div>
}


