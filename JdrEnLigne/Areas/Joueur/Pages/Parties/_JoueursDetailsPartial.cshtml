@model PartieJoueurs
@inject UserManager<JdrUser> UserManager
@Html.AntiForgeryToken()

@{
	JdrUser user = await UserManager.GetUserAsync(User);
	bool isMeneur = (Model.MeneurId == user.Id);
}

<div class="card m-0 p-0">
	<div class="card-body">
		@if (Model == null || Model.JoueursList.Count() == 0)
		{
			<p>Il n'y a pas encore de joueurs participant à cette partie</p>
		}
		else
		{
			<ul class="list-group">
				@foreach (JoueurVM joueur in Model.JoueursList)
				{
					<li class="list-group-item d-flex align-items-center">
						<div class="d-flex align-items-center">
							<span class="fs-6 me-2">@joueur.Pseudo</span>
							<a class="me-5" asp-area="Joueur" asp-page="/Joueurs/Index" asp-route-id="@joueur.JoueurId">
								<i class="fa-solid fa-book-open-reader"></i>
							</a>
							@if (isMeneur)
							{
								<a class="btn btn-danger btn-sm" onclick="Remove('@Url.Page("/Joueurs/Remove", new{area="Joueur", partieId=Model.PartieId, joueurId=joueur.JoueurId})')">
									<i class="fa-solid fa-person-circle-minus"></i>
								</a>
							}

						</div>
					</li>
				}
			</ul>
		}
	</div>
</div>

@if (isMeneur)
{
	<div class="mt-3">
		<a class="btn btn-outline-primary w-100" asp-area="Joueur" asp-page="/Joueurs/Add" asp-route-id="@Model.PartieId">
			<i class="fa-solid fa-person-circle-plus"></i>
			Ajouter un joueur
		</a>
	</div>
}

<script src="~/js/joueurRemove.js"></script>